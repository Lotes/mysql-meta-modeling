package de.loteslab.mmm.sqlc.lang;

import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.HashSet;

import org.antlr.v4.runtime.ANTLRInputStream;
import org.antlr.v4.runtime.CommonTokenStream;

import de.loteslab.mmm.sqlc.lang.MySqlParser.RootContext;

public class MySqlAnalyzer {

	private static String readFile(String path) throws IOException 
	{
	  byte[] encoded = Files.readAllBytes(Paths.get(path));
	  return new String(encoded, Charset.forName("UTF-8"));
	}
	
	private HashSet<MySqlObject> imports = new HashSet<MySqlObject>();
	private HashSet<MySqlObject> exports = new HashSet<MySqlObject>();
	
	public void scan(String fileName) throws IOException {
	    String input = readFile(fileName);
        scanRaw(input);
	}
	
	public void scanRaw(String input) {
		imports.clear();
		exports.clear();
		ANTLRInputStream stream = new ANTLRInputStream(input);
        MySqlLexer lexer = new MySqlLexer(stream);
        MySqlParser parser = new MySqlParser(new CommonTokenStream(lexer));
        RootContext root = parser.root();
        NameTreeVisitor visitor = new NameTreeVisitor();
        visitor.visit(root);
        for(MySqlObject o: visitor.getImports())
        	imports.add(o);
        for(MySqlObject o: visitor.getExports())
        	exports.add(o);
	}
	
	public Iterable<MySqlObject> getImports() {
		return imports;
	}

	public Iterable<MySqlObject> getExports() {
		return exports;
	}
}
